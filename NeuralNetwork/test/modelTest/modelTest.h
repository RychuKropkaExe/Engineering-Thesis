#ifndef MODEL_TEST_H
#define MODEL_TEST_H
#include <vector>
#include "trainingData.h"
#include "model.h"
using std::vector;

void xorModelTest(){
    vector<vector<float>> trainingInputs {
        {0.f,0.f},
        {0.f,1.f},
        {1.f,0.f},
        {1.f,1.f}
    };

    vector<vector<float>> trainingOutputs {
        {0.f},
        {1.f},
        {1.f},
        {0.f}
    };

    TrainingData td = TrainingData(trainingInputs, 2, 4, trainingOutputs, 1, 4);
    vector<size_t> arch = {2, 2, 1};
    size_t archSize = 3;
    vector<ActivationFunctionE> actFunc = {SIGMOID, SIGMOID, SIGMOID};

    Model model(arch, archSize, actFunc, archSize, true);

    model.printModel();

    float eps = 1e-1;
    float learningRate = 1.f;

    model.setEps(eps);
    model.setLearningRate(learningRate);

    model.learn(td, 10000);

    assert(model.cost() < 0.05f);
}

void parityModelTest(){
    vector<vector<float>> trainingInputs {
        { 0, 0, 0, 0, 0, 0, 0, 0 },
        { 0, 0, 0, 0, 0, 0, 0, 1 },
        { 0, 0, 0, 0, 0, 0, 1, 0 },
        { 0, 0, 0, 0, 0, 0, 1, 1 },
        { 0, 0, 0, 0, 0, 1, 0, 0 },
        { 0, 0, 0, 0, 0, 1, 0, 1 },
        { 0, 0, 0, 0, 0, 1, 1, 0 },
        { 0, 0, 0, 0, 0, 1, 1, 1 },
        { 0, 0, 0, 0, 1, 0, 0, 0 },
        { 0, 0, 0, 0, 1, 0, 0, 1 },
        { 0, 0, 0, 0, 1, 0, 1, 0 },
        { 0, 0, 0, 0, 1, 0, 1, 1 },
        { 0, 0, 0, 0, 1, 1, 0, 0 },
        { 0, 0, 0, 0, 1, 1, 0, 1 },
        { 0, 0, 0, 0, 1, 1, 1, 0 },
        { 0, 0, 0, 0, 1, 1, 1, 1 },
        { 0, 0, 0, 1, 0, 0, 0, 0 },
        { 0, 0, 0, 1, 0, 0, 0, 1 },
        { 0, 0, 0, 1, 0, 0, 1, 0 },
        { 0, 0, 0, 1, 0, 0, 1, 1 },
        { 0, 0, 0, 1, 0, 1, 0, 0 },
        { 0, 0, 0, 1, 0, 1, 0, 1 },
        { 0, 0, 0, 1, 0, 1, 1, 0 },
        { 0, 0, 0, 1, 0, 1, 1, 1 },
        { 0, 0, 0, 1, 1, 0, 0, 0 },
        { 0, 0, 0, 1, 1, 0, 0, 1 },
        { 0, 0, 0, 1, 1, 0, 1, 0 },
        { 0, 0, 0, 1, 1, 0, 1, 1 },
        { 0, 0, 0, 1, 1, 1, 0, 0 },
        { 0, 0, 0, 1, 1, 1, 0, 1 },
        { 0, 0, 0, 1, 1, 1, 1, 0 },
        { 0, 0, 0, 1, 1, 1, 1, 1 },
        { 0, 0, 1, 0, 0, 0, 0, 0 },
        { 0, 0, 1, 0, 0, 0, 0, 1 },
        { 0, 0, 1, 0, 0, 0, 1, 0 },
        { 0, 0, 1, 0, 0, 0, 1, 1 },
        { 0, 0, 1, 0, 0, 1, 0, 0 },
        { 0, 0, 1, 0, 0, 1, 0, 1 },
        { 0, 0, 1, 0, 0, 1, 1, 0 },
        { 0, 0, 1, 0, 0, 1, 1, 1 },
        { 0, 0, 1, 0, 1, 0, 0, 0 },
        { 0, 0, 1, 0, 1, 0, 0, 1 },
        { 0, 0, 1, 0, 1, 0, 1, 0 },
        { 0, 0, 1, 0, 1, 0, 1, 1 },
        { 0, 0, 1, 0, 1, 1, 0, 0 },
        { 0, 0, 1, 0, 1, 1, 0, 1 },
        { 0, 0, 1, 0, 1, 1, 1, 0 },
        { 0, 0, 1, 0, 1, 1, 1, 1 },
        { 0, 0, 1, 1, 0, 0, 0, 0 },
        { 0, 0, 1, 1, 0, 0, 0, 1 },
        { 0, 0, 1, 1, 0, 0, 1, 0 },
        { 0, 0, 1, 1, 0, 0, 1, 1 },
        { 0, 0, 1, 1, 0, 1, 0, 0 },
        { 0, 0, 1, 1, 0, 1, 0, 1 },
        { 0, 0, 1, 1, 0, 1, 1, 0 },
        { 0, 0, 1, 1, 0, 1, 1, 1 },
        { 0, 0, 1, 1, 1, 0, 0, 0 },
        { 0, 0, 1, 1, 1, 0, 0, 1 },
        { 0, 0, 1, 1, 1, 0, 1, 0 },
        { 0, 0, 1, 1, 1, 0, 1, 1 },
        { 0, 0, 1, 1, 1, 1, 0, 0 },
        { 0, 0, 1, 1, 1, 1, 0, 1 },
        { 0, 0, 1, 1, 1, 1, 1, 0 },
        { 0, 0, 1, 1, 1, 1, 1, 1 },
        { 0, 1, 0, 0, 0, 0, 0, 0 },
        { 0, 1, 0, 0, 0, 0, 0, 1 },
        { 0, 1, 0, 0, 0, 0, 1, 0 },
        { 0, 1, 0, 0, 0, 0, 1, 1 },
        { 0, 1, 0, 0, 0, 1, 0, 0 },
        { 0, 1, 0, 0, 0, 1, 0, 1 },
        { 0, 1, 0, 0, 0, 1, 1, 0 },
        { 0, 1, 0, 0, 0, 1, 1, 1 },
        { 0, 1, 0, 0, 1, 0, 0, 0 },
        { 0, 1, 0, 0, 1, 0, 0, 1 },
        { 0, 1, 0, 0, 1, 0, 1, 0 },
        { 0, 1, 0, 0, 1, 0, 1, 1 },
        { 0, 1, 0, 0, 1, 1, 0, 0 },
        { 0, 1, 0, 0, 1, 1, 0, 1 },
        { 0, 1, 0, 0, 1, 1, 1, 0 },
        { 0, 1, 0, 0, 1, 1, 1, 1 },
        { 0, 1, 0, 1, 0, 0, 0, 0 },
        { 0, 1, 0, 1, 0, 0, 0, 1 },
        { 0, 1, 0, 1, 0, 0, 1, 0 },
        { 0, 1, 0, 1, 0, 0, 1, 1 },
        { 0, 1, 0, 1, 0, 1, 0, 0 },
        { 0, 1, 0, 1, 0, 1, 0, 1 },
        { 0, 1, 0, 1, 0, 1, 1, 0 },
        { 0, 1, 0, 1, 0, 1, 1, 1 },
        { 0, 1, 0, 1, 1, 0, 0, 0 },
        { 0, 1, 0, 1, 1, 0, 0, 1 },
        { 0, 1, 0, 1, 1, 0, 1, 0 },
        { 0, 1, 0, 1, 1, 0, 1, 1 },
        { 0, 1, 0, 1, 1, 1, 0, 0 },
        { 0, 1, 0, 1, 1, 1, 0, 1 },
        { 0, 1, 0, 1, 1, 1, 1, 0 },
        { 0, 1, 0, 1, 1, 1, 1, 1 },
        { 0, 1, 1, 0, 0, 0, 0, 0 },
        { 0, 1, 1, 0, 0, 0, 0, 1 },
        { 0, 1, 1, 0, 0, 0, 1, 0 },
        { 0, 1, 1, 0, 0, 0, 1, 1 },
        { 0, 1, 1, 0, 0, 1, 0, 0 },
        { 0, 1, 1, 0, 0, 1, 0, 1 },
        { 0, 1, 1, 0, 0, 1, 1, 0 },
        { 0, 1, 1, 0, 0, 1, 1, 1 },
        { 0, 1, 1, 0, 1, 0, 0, 0 },
        { 0, 1, 1, 0, 1, 0, 0, 1 },
        { 0, 1, 1, 0, 1, 0, 1, 0 },
        { 0, 1, 1, 0, 1, 0, 1, 1 },
        { 0, 1, 1, 0, 1, 1, 0, 0 },
        { 0, 1, 1, 0, 1, 1, 0, 1 },
        { 0, 1, 1, 0, 1, 1, 1, 0 },
        { 0, 1, 1, 0, 1, 1, 1, 1 },
        { 0, 1, 1, 1, 0, 0, 0, 0 },
        { 0, 1, 1, 1, 0, 0, 0, 1 },
        { 0, 1, 1, 1, 0, 0, 1, 0 },
        { 0, 1, 1, 1, 0, 0, 1, 1 },
        { 0, 1, 1, 1, 0, 1, 0, 0 },
        { 0, 1, 1, 1, 0, 1, 0, 1 },
        { 0, 1, 1, 1, 0, 1, 1, 0 },
        { 0, 1, 1, 1, 0, 1, 1, 1 },
        { 0, 1, 1, 1, 1, 0, 0, 0 },
        { 0, 1, 1, 1, 1, 0, 0, 1 },
        { 0, 1, 1, 1, 1, 0, 1, 0 },
        { 0, 1, 1, 1, 1, 0, 1, 1 },
        { 0, 1, 1, 1, 1, 1, 0, 0 },
        { 0, 1, 1, 1, 1, 1, 0, 1 },
        { 0, 1, 1, 1, 1, 1, 1, 0 },
        { 0, 1, 1, 1, 1, 1, 1, 1 },
        { 1, 0, 0, 0, 0, 0, 0, 0 },
        { 1, 0, 0, 0, 0, 0, 0, 1 },
        { 1, 0, 0, 0, 0, 0, 1, 0 },
        { 1, 0, 0, 0, 0, 0, 1, 1 },
        { 1, 0, 0, 0, 0, 1, 0, 0 },
        { 1, 0, 0, 0, 0, 1, 0, 1 },
        { 1, 0, 0, 0, 0, 1, 1, 0 },
        { 1, 0, 0, 0, 0, 1, 1, 1 },
        { 1, 0, 0, 0, 1, 0, 0, 0 },
        { 1, 0, 0, 0, 1, 0, 0, 1 },
        { 1, 0, 0, 0, 1, 0, 1, 0 },
        { 1, 0, 0, 0, 1, 0, 1, 1 },
        { 1, 0, 0, 0, 1, 1, 0, 0 },
        { 1, 0, 0, 0, 1, 1, 0, 1 },
        { 1, 0, 0, 0, 1, 1, 1, 0 },
        { 1, 0, 0, 0, 1, 1, 1, 1 },
        { 1, 0, 0, 1, 0, 0, 0, 0 },
        { 1, 0, 0, 1, 0, 0, 0, 1 },
        { 1, 0, 0, 1, 0, 0, 1, 0 },
        { 1, 0, 0, 1, 0, 0, 1, 1 },
        { 1, 0, 0, 1, 0, 1, 0, 0 },
        { 1, 0, 0, 1, 0, 1, 0, 1 },
        { 1, 0, 0, 1, 0, 1, 1, 0 },
        { 1, 0, 0, 1, 0, 1, 1, 1 },
        { 1, 0, 0, 1, 1, 0, 0, 0 },
        { 1, 0, 0, 1, 1, 0, 0, 1 },
        { 1, 0, 0, 1, 1, 0, 1, 0 },
        { 1, 0, 0, 1, 1, 0, 1, 1 },
        { 1, 0, 0, 1, 1, 1, 0, 0 },
        { 1, 0, 0, 1, 1, 1, 0, 1 },
        { 1, 0, 0, 1, 1, 1, 1, 0 },
        { 1, 0, 0, 1, 1, 1, 1, 1 },
        { 1, 0, 1, 0, 0, 0, 0, 0 },
        { 1, 0, 1, 0, 0, 0, 0, 1 },
        { 1, 0, 1, 0, 0, 0, 1, 0 },
        { 1, 0, 1, 0, 0, 0, 1, 1 },
        { 1, 0, 1, 0, 0, 1, 0, 0 },
        { 1, 0, 1, 0, 0, 1, 0, 1 },
        { 1, 0, 1, 0, 0, 1, 1, 0 },
        { 1, 0, 1, 0, 0, 1, 1, 1 },
        { 1, 0, 1, 0, 1, 0, 0, 0 },
        { 1, 0, 1, 0, 1, 0, 0, 1 },
        { 1, 0, 1, 0, 1, 0, 1, 0 },
        { 1, 0, 1, 0, 1, 0, 1, 1 },
        { 1, 0, 1, 0, 1, 1, 0, 0 },
        { 1, 0, 1, 0, 1, 1, 0, 1 },
        { 1, 0, 1, 0, 1, 1, 1, 0 },
        { 1, 0, 1, 0, 1, 1, 1, 1 },
        { 1, 0, 1, 1, 0, 0, 0, 0 },
        { 1, 0, 1, 1, 0, 0, 0, 1 },
        { 1, 0, 1, 1, 0, 0, 1, 0 },
        { 1, 0, 1, 1, 0, 0, 1, 1 },
        { 1, 0, 1, 1, 0, 1, 0, 0 },
        { 1, 0, 1, 1, 0, 1, 0, 1 },
        { 1, 0, 1, 1, 0, 1, 1, 0 },
        { 1, 0, 1, 1, 0, 1, 1, 1 },
        { 1, 0, 1, 1, 1, 0, 0, 0 },
        { 1, 0, 1, 1, 1, 0, 0, 1 },
        { 1, 0, 1, 1, 1, 0, 1, 0 },
        { 1, 0, 1, 1, 1, 0, 1, 1 },
        { 1, 0, 1, 1, 1, 1, 0, 0 },
        { 1, 0, 1, 1, 1, 1, 0, 1 },
        { 1, 0, 1, 1, 1, 1, 1, 0 },
        { 1, 0, 1, 1, 1, 1, 1, 1 },
        { 1, 1, 0, 0, 0, 0, 0, 0 },
        { 1, 1, 0, 0, 0, 0, 0, 1 },
        { 1, 1, 0, 0, 0, 0, 1, 0 },
        { 1, 1, 0, 0, 0, 0, 1, 1 },
        { 1, 1, 0, 0, 0, 1, 0, 0 },
        { 1, 1, 0, 0, 0, 1, 0, 1 },
        { 1, 1, 0, 0, 0, 1, 1, 0 },
        { 1, 1, 0, 0, 0, 1, 1, 1 },
        { 1, 1, 0, 0, 1, 0, 0, 0 },
        { 1, 1, 0, 0, 1, 0, 0, 1 },
        { 1, 1, 0, 0, 1, 0, 1, 0 },
        { 1, 1, 0, 0, 1, 0, 1, 1 },
        { 1, 1, 0, 0, 1, 1, 0, 0 },
        { 1, 1, 0, 0, 1, 1, 0, 1 },
        { 1, 1, 0, 0, 1, 1, 1, 0 },
        { 1, 1, 0, 0, 1, 1, 1, 1 },
        { 1, 1, 0, 1, 0, 0, 0, 0 },
        { 1, 1, 0, 1, 0, 0, 0, 1 },
        { 1, 1, 0, 1, 0, 0, 1, 0 },
        { 1, 1, 0, 1, 0, 0, 1, 1 },
        { 1, 1, 0, 1, 0, 1, 0, 0 },
        { 1, 1, 0, 1, 0, 1, 0, 1 },
        { 1, 1, 0, 1, 0, 1, 1, 0 },
        { 1, 1, 0, 1, 0, 1, 1, 1 },
        { 1, 1, 0, 1, 1, 0, 0, 0 },
        { 1, 1, 0, 1, 1, 0, 0, 1 },
        { 1, 1, 0, 1, 1, 0, 1, 0 },
        { 1, 1, 0, 1, 1, 0, 1, 1 },
        { 1, 1, 0, 1, 1, 1, 0, 0 },
        { 1, 1, 0, 1, 1, 1, 0, 1 },
        { 1, 1, 0, 1, 1, 1, 1, 0 },
        { 1, 1, 0, 1, 1, 1, 1, 1 },
        { 1, 1, 1, 0, 0, 0, 0, 0 },
        { 1, 1, 1, 0, 0, 0, 0, 1 },
        { 1, 1, 1, 0, 0, 0, 1, 0 },
        { 1, 1, 1, 0, 0, 0, 1, 1 },
        { 1, 1, 1, 0, 0, 1, 0, 0 },
        { 1, 1, 1, 0, 0, 1, 0, 1 },
        { 1, 1, 1, 0, 0, 1, 1, 0 },
        { 1, 1, 1, 0, 0, 1, 1, 1 },
        { 1, 1, 1, 0, 1, 0, 0, 0 },
        { 1, 1, 1, 0, 1, 0, 0, 1 },
        { 1, 1, 1, 0, 1, 0, 1, 0 },
        { 1, 1, 1, 0, 1, 0, 1, 1 },
        { 1, 1, 1, 0, 1, 1, 0, 0 },
        { 1, 1, 1, 0, 1, 1, 0, 1 },
        { 1, 1, 1, 0, 1, 1, 1, 0 },
        { 1, 1, 1, 0, 1, 1, 1, 1 },
        { 1, 1, 1, 1, 0, 0, 0, 0 },
        { 1, 1, 1, 1, 0, 0, 0, 1 },
        { 1, 1, 1, 1, 0, 0, 1, 0 },
        { 1, 1, 1, 1, 0, 0, 1, 1 },
        { 1, 1, 1, 1, 0, 1, 0, 0 },
        { 1, 1, 1, 1, 0, 1, 0, 1 },
        { 1, 1, 1, 1, 0, 1, 1, 0 },
        { 1, 1, 1, 1, 0, 1, 1, 1 },
        { 1, 1, 1, 1, 1, 0, 0, 0 },
        { 1, 1, 1, 1, 1, 0, 0, 1 },
        { 1, 1, 1, 1, 1, 0, 1, 0 },
        { 1, 1, 1, 1, 1, 0, 1, 1 },
        { 1, 1, 1, 1, 1, 1, 0, 0 },
        { 1, 1, 1, 1, 1, 1, 0, 1 },
        { 1, 1, 1, 1, 1, 1, 1, 0 },
        { 1, 1, 1, 1, 1, 1, 1, 1 }
    };

    vector<vector<float>> trainingOutputs {
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0},
        {1},
        {0}
    };

    TrainingData td = TrainingData(trainingInputs, 8, 256, trainingOutputs, 1, 256);
    vector<size_t> arch = {8, 8, 1};
    size_t archSize = 3;
    vector<ActivationFunctionE> actFunc = {SIGMOID, SIGMOID, SIGMOID, SIGMOID};

    Model model(arch, archSize, actFunc, archSize, true);

    model.printModel();

    float eps = 1e-1;
    float learningRate = 1e-1;

    model.setEps(eps);
    model.setLearningRate(learningRate);

    model.learn(td, 10000);

    model.printModel();

    for(size_t i = 0; i < td.numOfSamples; ++i){
        std::cout << "FOR INPUT: " << "\n";
        printFastMatrix(td.inputs[i]);
        std::cout << "OUTPUT IS: " << "\n";
        FastMatrix result = model.run(td.inputs[i]);
        printFastMatrix(result);
    }

    assert(model.cost() < 0.05f);
}

void modelTests(){
    //xorModelTest();
    parityModelTest();
}

#endif